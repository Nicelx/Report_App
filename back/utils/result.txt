
********************* 
C:\projects\Vue\malina reports\front\src\assets\styles.css

/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
/* #region reset */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

/* #endregion */


/* #region base */
:root {
  --color-primary: #4a6fa5;    /* Основной синий */
  --color-secondary: #ff6b6b;  /* Акцентный коралловый */
  --color-dark: #2d3748;       /* Тёмный для текста */
  --color-light: #f7fafc;      /* Светлый фон */
  --glow: 0 0 15px rgba(74, 111, 165, 0.5); /* Эффект свечения */
}
/* #endregion */

.btn {
  background-color: var(--color-primary);
  color: var(--color-light);
}
********************* 
C:\projects\Vue\malina reports\front\src\App.vue

<script>
export default {
  data() {
    return {
      username: "",
      password: "",
    };
  },
  methods: {
    async getInfo() {
      const response = await fetch("http://localhost:3000/get-info"); // делаем GET-запрос

      const data = await response.json(); // предполагается, что сервер возвращает JSON
      console.log(data);
    },
    async getInfo2() {
      const response = await fetch("http://localhost:3000/get-info2"); // делаем GET-запрос

      const data = await response.json(); // предполагается, что сервер возвращает JSON
      console.log(data);
    },
    async createUser() {
      const response = await fetch("http://localhost:3000/create-user", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          username: this.username,
          password: this.password,
        }),
      });
    },

    async login() {
      // console.log(this.username, this.password)
      const response = await fetch("http://localhost:3000/login", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          username: this.username,
          password: this.password,
        }),
      });
    },
  },
};
</script>

<template>
  <nav>
    <router-link to="/">Home</router-link> |
    <router-link to="/login">Login</router-link> |
    <router-link to="/register">Register</router-link>
    <router-link to="/settings">Settings</router-link>
    <a href="">выйти</a>
  </nav>

  <router-view />
</template>

<style scoped></style>

********************* 
C:\projects\Vue\malina reports\front\src\main.js

import './assets/styles.css';

import { createApp } from 'vue'
import { Quasar } from 'quasar';
import router from './router';

// import '@quasar/extras/material-icons/material-icons.css'
// Import Quasar css
// import 'quasar/src/css/index.sass'


import App from './App.vue'


const myApp = createApp(App);
// myApp.use(Quasar, {
//   plugins: {}, // import Quasar plugins and add here
// })
myApp.use(router);
myApp.mount('#app')

********************* 
C:\projects\Vue\malina reports\front\src\router\index.js

import Settings from '../views/Settings.vue';
import Home from '../views/Home.vue';
import Login from '../views/Login.vue';
import Register from '../views/Register.vue';

import { createRouter, createWebHistory } from 'vue-router';


const routes = [
  {
    path: '/',
    name: 'Home',
    component: Home
  },
  {
    path: '/login',
    name: 'Login',
    component: Login
  },
  {
    path: '/register',
    name: 'Register',
    component: Register
  },
  {
    path: '/settings',
    name : 'Settings',
    component: Settings
  }
]

const router = createRouter({
  history: createWebHistory(),
  routes
})

export default router
********************* 
C:\projects\Vue\malina reports\front\src\views\Home.vue

<script>
export default {
  // add token somewhere
//  data() {
//     return {
//       username: "",
//       password: "",
//       message: ''
//     };
//   },
  methods: {
    async getTasks() {
        console.log('here full list of tasks');
    },


    async addTask() {
      const token = localStorage.getItem("authToken");
      const response = await fetch("http://localhost:3000/add-task", {
        method: "POST",
        headers: {
          'Authorization': `Bearer ${token}`,
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          user_id: 'user_id here',
          description: 'Описание такски тут'
        }),
      });
    },

    async getInfo() {
      const token = localStorage.getItem("authToken");

      console.log('token', token);

      const response = await fetch("http://localhost:3000/get-info", {
        method: "GET",
        headers: {
          'Authorization': `Bearer ${token}`,
          "Content-Type": "application/json",
        },
      }); // делаем GET-запрос

      const data = await response.json(); // предполагается, что сервер возвращает JSON
      console.log(data);
    },
    async getInfo2() {
      const response = await fetch("http://localhost:3000/get-info2"); // делаем GET-запрос

      const data = await response.json(); // предполагается, что сервер возвращает JSON
      console.log(data);
    },
  }
}
</script>

<template>
  <div style="width: 400px">
    Home page
    <!-- <q-btn @click="getInfo" color="deep-orange" glossy label="Show tasks" />
    <q-btn @click="getInfo" color="deep-orange" glossy label="Show tasks" /> -->
    <button class = "btn" @click = "getInfo">Show tasks</button>
    <button @click = "getInfo">Add task</button>
    <!-- <q-btn @click="addTask" color="deep-orange" glossy label="Add task" /> -->
  </div>
</template>

********************* 
C:\projects\Vue\malina reports\front\src\views\Login.vue

<script>
export default {
  data() {
    return {
      username: "",
      password: "",
      message: ''
    };
  },
  methods: {
    async login() {
      const response = await fetch("http://localhost:3000/login", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          username: this.username,
          password: this.password,
        }),
      });

      if (response.ok) {
        const data = await response.json();
        console.log(data, 'data here')
        localStorage.setItem("authToken", data.token);
        localStorage.setItem("user", JSON.stringify(data.user));

        this.$router.push("/");
      } else {
        // console.error("Login failed:", await response.json());
        this.message = 'Login failed';
      }

      console.log(response);
    },
  },
};
</script>

<template>
  <div style="width: 400px">
    <h2>Login</h2>
    <p>{{ message }}</p>
    <input
      v-model="username"
      class="input-base"
      type="text"
      placeholder="login"
    />

    <input
      v-model="password"
      class="input-base"
      type="password"
      placeholder="password"
    />

    <q-btn @click="login" color="deep-orange" glossy label="Login" />
  </div>
</template>

<style scoped></style>

********************* 
C:\projects\Vue\malina reports\front\src\views\Register.vue

<script>
export default {
  data() {
    return {
      username: "",
      password: "",
    };
  },
  methods: {
    // async getInfo() {
    //   const response = await fetch("http://localhost:3000/get-info"); // делаем GET-запрос

    //   const data = await response.json(); // предполагается, что сервер возвращает JSON
    //   console.log(data);
    // },
    // async getInfo2() {
    //   const response = await fetch("http://localhost:3000/get-info2"); // делаем GET-запрос

    //   const data = await response.json(); // предполагается, что сервер возвращает JSON
    //   console.log(data);
    // },
    async createUser() {
      const response = await fetch("http://localhost:3000/create-user", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ username: this.username, password: this.password }),
      });
    },
  },
};

</script>

<template>
  <div style="width: 400px">
    <h2>Registration</h2>
    <input
      v-model="username"
      class="input-base"
      type="text"
      placeholder="login"
    />
    <input
      v-model="password"
      class="input-base"
      type="password"
      placeholder="password"
    />

    <q-btn @click="createUser" color="deep-orange" glossy label="Registrate" />
  </div>
</template>
********************* 
C:\projects\Vue\malina reports\front\src\views\Settings.vue

<script>
export default {
  data() {
    return {};
  },
  methods: {},
};

</script>

<template>
  <div style="width: 400px">
   settings here
  </div>
</template>